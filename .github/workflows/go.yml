name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          check-latest: true
      - name: Install dependencies
        run: |
          go mod download
          # Ensure cobra package is installed
          go get -v github.com/spf13/cobra@v1.9.1
          go mod tidy

      - name: Run Format Check
        run: |
          if [ -n "$(go fmt ./...)" ]; then
            echo "Please run 'go fmt ./...' to format your code."
            exit 1
          fi

      - name: Run Tests with Coverage
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          fail_ci_if_error: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          check-latest: true

      - name: Install dependencies
        run: go mod download

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m --out-format=colored-line-number
          skip-build-cache: true